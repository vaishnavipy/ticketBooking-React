{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","selectedArr","setSelectedArr","Array","fill","seatArr","handleSeatSelection","e","includes","Number","target","id","prevState","filter","seatNo","everyThirdColumn","seats","map","seat","i","className","onClick","value","onChange","length","joker","girlOnTrain","lionKing","avengers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAmFeA,MA/Ef,WAAgB,IAAD,EAEYC,mBAAS,SAFrB,mBAENC,EAFM,KAEAC,EAFA,OAIwBF,mBAAS,IAJjC,mBAING,EAJM,KAIMC,EAJN,OAYMJ,mBAAUK,MAAM,IAAIC,KAAK,OAArCC,EAZM,oBAiBd,SAASC,EAAoBC,GAEzBN,EAAYO,SAASC,OAAOF,EAAEG,OAAOC,KAEtCT,GAAe,SAAAU,GAAS,OAAIA,EAAUC,QAAO,SAAAC,GAAM,OAAIA,IAAWL,OAAOF,EAAEG,OAAOC,UAIlFT,GAAe,SAAAU,GAAS,4BAAQA,GAAR,CAAkBH,OAAOF,EAAEG,OAAOC,SAK7D,IAAII,EAAmB,EAEhBC,EAAQX,EAAQY,KAAI,SAACC,EAAKC,GAC9B,OAAGA,IAAMJ,EAEA,qBAAaJ,GAAIQ,GAAPA,GAEXA,IAPuC,EAOfJ,GAC9BA,GAAoC,GAC7B,qBAAaJ,GAAIQ,GAAPA,IAGV,qBAAKC,UAAYnB,EAAYO,SAASW,GAAK,gBAAkB,mBAA4BR,GAAIQ,EAAGE,QAASf,GAAnBa,MAOjG,OACE,sBAAKC,UAAU,YAAf,UACE,8CAEA,yBAAQE,MAAOvB,EAAOwB,SA7C1B,SAAsBhB,GACpBP,EAASO,EAAEG,OAAOY,QA4ChB,UACE,wBAAQA,MAAM,QAAd,yBACA,wBAAQA,MAAM,cAAd,wCACA,wBAAQA,MAAM,WAAd,6BACA,wBAAQA,MAAM,WAAd,+BAGF,sBAAKF,UAAU,OAAf,UACE,qBAAKA,UAAU,qBACf,8CACA,qBAAKA,UAAU,kBACf,+CAGF,qBAAKA,UAAU,WAIf,qBAAKA,UAAU,WAAf,SACGJ,IAEJ,oDAAsB,uBAAMI,UAAU,YAAhB,cAA8BnB,EAAYuB,OAA1C,OAAtB,kCAA8G,uBAAMJ,UAAU,YAAhB,UAA8BnB,EAAYuB,OApE7I,CAACC,MAAQ,GAAIC,YAAc,EAAGC,SAAW,GAAIC,SAAW,IAoEoG7B,GAAzD,cClEpG8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.26fbc584.chunk.js","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [input,setInput] = useState(\"joker\");\n\n  const [selectedArr,setSelectedArr] = useState([])\n\n  const price = {joker : 10, girlOnTrain : 8, lionKing : 11, avengers : 12 }\n\n  function handleChange(e){\n    setInput(e.target.value)\n  }\n\n  const [seatArr ] = useState( Array(40).fill(null))\n  \n\n\n\n function handleSeatSelection(e){\n\n  if(selectedArr.includes(Number(e.target.id))){\n\n    setSelectedArr(prevState => prevState.filter(seatNo => seatNo !== Number(e.target.id)));\n\n  }else{\n\n    setSelectedArr(prevState => [...prevState,Number(e.target.id)])  ;\n\n  }\n\n }\n let everyThirdColumn = 2; let everyEighthColumn = 5;\n\n  const seats = seatArr.map((seat,i) => {\n    if(i === everyThirdColumn  ){\n      \n      return <div key={i} id={i}></div>\n    }\n    else if(i === everyEighthColumn+everyThirdColumn){\n      everyThirdColumn = everyThirdColumn+10;\n      return <div key={i} id={i}></div>\n    }\n    else{\n      return <div className= {selectedArr.includes(i) ? \"seat occupied\" : \"seat un-occupied\"} key={i} id={i} onClick={handleSeatSelection}></div>\n    }\n    \n  })\n\n \n\n  return (\n    <div className=\"container\">\n      <h1>Book Tickets</h1>\n\n      <select value={input} onChange={handleChange}>\n        <option value=\"joker\">Joker (10$)</option>\n        <option value=\"girlOnTrain\">The girl On the Train (8$)</option>\n        <option value=\"lionKing\">Lion King (11$)</option>\n        <option value=\"avengers\">Avengers (12$)</option>\n      </select>\n\n      <div className=\"flex\">\n        <div className=\"seat un-occupied\"></div>\n        <span>UnOccupied</span>\n        <div className=\"seat occupied\"></div>\n        <span>Occupied</span>\n      </div>\n\n      <div className=\"screen\">\n\n      </div>\n\n      <div className=\"seat-div\">\n        {seats}\n      </div>\n     <p> You have selected <span className=\"selection\"> {selectedArr.length} </span> seats and your total price is <span className=\"selection\">{ selectedArr.length * price[input]}$</span></p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}